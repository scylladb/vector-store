{
  "openapi": "3.1.0",
  "info": {
    "title": "ScyllaDB Vector Store API",
    "description": "REST API for ScyllaDB Vector Store nodes. Provides capabilities for executing vector search queries, managing indexes, and checking status of Vector Store nodes.",
    "license": {
      "name": "LicenseRef-ScyllaDB-Source-Available-1.0"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/indexes": {
      "get": {
        "tags": [
          "scylla-vector-store-index"
        ],
        "description": "Returns the list of indexes managed by the Vector Store node. The list includes indexes in any state (initializing, available/built, destroying). Due to synchronization delays, it may temporarily differ from the list of vector indexes inside ScyllaDB.",
        "operationId": "get_indexes",
        "responses": {
          "200": {
            "description": "Successful operation. Returns an array of index information representing all indexes managed by the Vector Store.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndexInfo"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Possible causes: database issues or unexpected failures."
          }
        }
      }
    },
    "/api/v1/indexes/{keyspace}/{index}/ann": {
      "post": {
        "tags": [
          "scylla-vector-store-index"
        ],
        "description": "Performs an Approximate Nearest Neighbor (ANN) search using the specified index. Returns the vectors most similar to the provided embedding. The maximum number of results is controlled by the optional 'limit' parameter in the payload. The similarity metric is determined at index creation and cannot be changed per query.",
        "operationId": "post_index_ann",
        "parameters": [
          {
            "name": "keyspace",
            "in": "path",
            "description": "Name of the ScyllaDB keyspace containing the searched table.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/KeyspaceName"
            }
          },
          {
            "name": "index",
            "in": "path",
            "description": "The name of the ScyllaDB vector index within the specified keyspace to perform the search on.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IndexName"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostIndexAnnRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful ANN search. Returns a list of primary keys and their corresponding distances for the most similar vectors found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostIndexAnnResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Possible causes: invalid embedding size, malformed input, or missing required fields."
          },
          "404": {
            "description": "Index not found. Possible causes: index does not exist, or is not built yet."
          },
          "500": {
            "description": "Ann search error. Possible causes: internal error, or search engine issues."
          }
        }
      }
    },
    "/api/v1/indexes/{keyspace}/{index}/count": {
      "get": {
        "tags": [
          "scylla-vector-store-index"
        ],
        "description": "Returns the number of embeddings indexed by a specific vector index. Reflects only available embeddings and excludes any 'tombstones' (elements marked for deletion but still present in the index structure).",
        "operationId": "get_index_count",
        "parameters": [
          {
            "name": "keyspace",
            "in": "path",
            "description": "The name of the ScyllaDB keyspace containing the index.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/KeyspaceName"
            }
          },
          {
            "name": "index",
            "in": "path",
            "description": "The name of the ScyllaDB vector index.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/IndexName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful count operation. Returns the total number of embeddings currently stored in the index.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          },
          "404": {
            "description": "Index not found. Possible causes: index does not exist, or is not built yet."
          },
          "500": {
            "description": "Counting error. Possible causes: internal error, or database issues."
          }
        }
      }
    },
    "/api/v1/info": {
      "get": {
        "tags": [
          "scylla-vector-store-info"
        ],
        "description": "Returns information about the Vector Store service serving this API.",
        "operationId": "get_info",
        "responses": {
          "200": {
            "description": "Vector Store service information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Distance": {
        "type": "number",
        "format": "float",
        "description": "Distance between embedding vectors measured using the distance function defined while creating the index."
      },
      "Embedding": {
        "type": "array",
        "items": {
          "type": "number",
          "format": "float"
        },
        "description": "The embedding vector to use for the Approximate Nearest Neighbor search. The format of data must match the quantization of the index."
      },
      "IndexInfo": {
        "type": "object",
        "description": "Information about a vector index, such as keyspace, name and quantization.",
        "required": [
          "keyspace",
          "index",
          "quantization"
        ],
        "properties": {
          "index": {
            "$ref": "#/components/schemas/IndexName"
          },
          "keyspace": {
            "$ref": "#/components/schemas/KeyspaceName"
          },
          "quantization": {
            "$ref": "#/components/schemas/Quantization"
          }
        }
      },
      "IndexName": {
        "type": "string",
        "description": "A name of the vector index in a db."
      },
      "InfoResponse": {
        "type": "object",
        "required": [
          "version",
          "service"
        ],
        "properties": {
          "service": {
            "type": "string"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "KeyspaceName": {
        "type": "string",
        "description": "A keyspace name in a db."
      },
      "Limit": {
        "type": "integer",
        "format": "int32"
      },
      "PostIndexAnnRequest": {
        "type": "object",
        "required": [
          "embedding"
        ],
        "properties": {
          "embedding": {
            "$ref": "#/components/schemas/Embedding"
          },
          "limit": {
            "$ref": "#/components/schemas/Limit"
          }
        }
      },
      "PostIndexAnnResponse": {
        "type": "object",
        "required": [
          "primary_keys",
          "distances"
        ],
        "properties": {
          "distances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Distance"
            }
          },
          "primary_keys": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {}
            },
            "propertyNames": {
              "type": "string",
              "description": "Name of the column in a db table."
            }
          }
        }
      },
      "Quantization": {
        "type": "string",
        "description": "Defines the data type and precision used for storing and processing embedding vectors in the index.",
        "enum": [
          "F32"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "scylla-vector-store-index",
      "description": "Operations for managing ScyllaDB Vector Store indexes, including listing, counting, and searching."
    },
    {
      "name": "scylla-vector-store-info",
      "description": "Endpoints providing general information and status about the ScyllaDB Vector Store service."
    }
  ]
}